import cv2
import mediapipe as mp

# Mediapipe 모델 초기화
mp_hands = mp.solutions.hands
mp_drawing = mp.solutions.drawing_utils

# 웹캠 비디오 스트림 초기화
cap = cv2.VideoCapture(0)

# Mediapipe의 Hands 객체 생성 (최대 2개 손 인식)
with mp_hands.Hands(
        static_image_mode=False,
        max_num_hands=2,
        min_detection_confidence=0.5,
        min_tracking_confidence=0.5) as hands:

    while cap.isOpened():
        ret, frame = cap.read()
        if not ret:
            print("카메라에서 프레임을 가져올 수 없습니다.")
            break

        # OpenCV에서 사용하는 BGR 이미지를 RGB로 변환
        image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

        # 성능을 높이기 위해 이미지를 쓰지 않도록 설정
        image.flags.writeable = False
        results = hands.process(image)

        # 원래 이미지로 다시 변환 및 쓰기 가능 설정
        image.flags.writeable = True
        image = cv2.cvtColor(image, cv2.COLOR_RGB2BGR)

        # 손이 감지된 경우, 각 손 랜드마크를 화면에 표시
        if results.multi_hand_landmarks:
            for hand_landmarks in results.multi_hand_landmarks:
                # 손 관절을 이미지에 그리기
                mp_drawing.draw_landmarks(
                    image, hand_landmarks, mp_hands.HAND_CONNECTIONS)

        # 이미지 출력
        cv2.imshow('Hand Tracking', image)

        # 'q' 키를 누르면 종료
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

# 리소스 해제
cap.release()
cv2.destroyAllWindows()

